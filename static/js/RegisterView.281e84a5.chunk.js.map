{"version":3,"file":"static/js/RegisterView.281e84a5.chunk.js","mappings":"+PAEaA,EAAUC,EAAAA,GAAAA,KAAH,mGAMPC,EAAeD,EAAAA,GAAAA,MAAH,uEAKZE,EAAcF,EAAAA,GAAAA,KAAH,uEAKXG,EAAgBH,EAAAA,GAAAA,OAAH,4H,SCLbI,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,IAA7C,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EACI,OADJA,EAEK,QAFLA,EAGQ,WAaRC,EAAgB,SAACC,GACnB,MAAwBA,EAAEC,cAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACV,OAAQV,GACJ,KAAKM,EACDL,EAAYS,GACZ,MACJ,KAAKJ,EACDH,EAAaO,GACb,MACJ,KAAKJ,EACDD,EAAgBK,GAChB,MACJ,QACI,SAIhB,OACI,UAACnB,EAAD,CAASoB,SAvBQ,SAACH,GAClBA,EAAEI,iBACFf,EAASgB,EAAAA,aAA4B,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KANpDH,EAAY,IACZE,EAAa,IACbE,EAAgB,KAyBhB,WACI,UAACZ,EAAD,YACI,SAACC,EAAD,oBACA,kBACIoB,KAAK,OACLd,KAAK,OACLU,MAAOV,EACPe,SAAUR,EACVS,UAAQ,QAGhB,UAACvB,EAAD,YACI,SAACC,EAAD,qBACA,kBACIoB,KAAK,QACLd,KAAK,QACLU,MAAOR,EACPa,SAAUR,EACVS,UAAQ,QAGhB,UAACvB,EAAD,YACI,SAACC,EAAD,wBACA,kBACIoB,KAAK,WACLd,KAAK,WACLU,MAAON,EACPW,SAAUR,EACVS,UAAQ,QAGhB,SAACrB,EAAD,2BC1EZ,EATqB,WACjB,OACI,4BACI,2CACA,SAACC,EAAD,S,oBCNG,SAASqB,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHT,MAAOW,OAAOC,OAAOH,O","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegForm = styled.form`\n    width: fit-content;\n    padding: 20px;\n    border: 1px solid black;\n`;\n\nexport const RegFormLabel = styled.label`\n    display: block;\n    margin-bottom: 10px;\n`; \n\nexport const RegFormSpan = styled.span`\n    display: block;\n    margin-bottom: 10px;\n`;\n\nexport const RegFormButton = styled.button`\n    display: block;\n    cursor: pointer;\n\n    &.hover {\n        background-color: aqua;\n    }\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as authOperations from '../../redux/auth/authOperation';\n\n//Style\nimport {\n    RegForm,\n    RegFormLabel,\n    RegFormSpan,\n    RegFormButton\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const [name, setNameUser] = useState('');\n    const [email, setEmailUser] = useState('');\n    const [password, setPasswordUser] = useState('');\n    \n    const user = {\n        name: \"name\",\n        email: \"email\",\n        password: \"password\"\n    };\n\n    const resetFormInput = () => { \n        setNameUser('');\n        setEmailUser('');\n        setPasswordUser('');\n    };\n    const formOnSubmit = (e) => { \n        e.preventDefault();\n        dispatch(authOperations.axiosAddUser({ name, email, password }));\n        resetFormInput();\n    };\n    const inputOnChange = (e) => { \n        const { name, value } = e.currentTarget;\n            switch (name) {\n                case user.name:\n                    setNameUser(value);\n                    break;\n                case user.email:\n                    setEmailUser(value);\n                    break;\n                case user.password:\n                    setPasswordUser(value);\n                    break;\n                default:\n                    return;\n        }\n    };\n\n    return (\n        <RegForm onSubmit={formOnSubmit}>\n            <RegFormLabel>\n                <RegFormSpan>Name</RegFormSpan>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={inputOnChange}\n                    required\n                />\n            </RegFormLabel>\n            <RegFormLabel>\n                <RegFormSpan>Email</RegFormSpan>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={inputOnChange}\n                    required\n                />\n            </RegFormLabel>\n            <RegFormLabel>\n                <RegFormSpan>Password</RegFormSpan>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={inputOnChange}\n                    required\n                />\n            </RegFormLabel>\n            <RegFormButton>Register</RegFormButton>\n        </RegForm>\n    );\n};\n/*\nname: Dustin Beck\nemail: nuwexuduv@mailinator.com\npassword: Pa$$w0rd!\ntoken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzE1MWU0N2UxNjVkODAwMTU2ZWIwZWYiLCJpYXQiOjE2NjIzMjgzOTF9.vIlEZCZjegZBybHxz242B2PtUxT_LSDMqHEKbTCLhhA\n\n*/","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nconst RegisterView = () => { \n    return (\n        <div>\n            <h1>Register Form</h1>\n            <RegisterForm />\n        </div>\n    );\n};\n\nexport default RegisterView;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["RegForm","styled","RegFormLabel","RegFormSpan","RegFormButton","RegisterForm","dispatch","useDispatch","useState","name","setNameUser","email","setEmailUser","password","setPasswordUser","user","inputOnChange","e","currentTarget","value","onSubmit","preventDefault","authOperations","type","onChange","required","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}