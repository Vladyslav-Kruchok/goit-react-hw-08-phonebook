{"version":3,"file":"static/js/LoginView.b90220db.chunk.js","mappings":"iQAEaA,EAAUC,EAAAA,GAAAA,KAAH,mGAMPC,EAAeD,EAAAA,GAAAA,MAAH,uEAKZE,EAAcF,EAAAA,GAAAA,KAAH,uEAKXG,EAAgBH,EAAAA,GAAAA,OAAH,4H,SCLbI,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EACK,QADLA,EAEQ,WAYRC,EAAgB,SAACC,GACnB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACV,OAAQD,GACJ,KAAKJ,EACDH,EAAaQ,GACb,MACJ,KAAKL,EACDD,EAAgBM,GAChB,MACJ,QACI,OAEf,EAED,OACI,UAAClB,EAAD,CAASmB,SApBQ,SAACJ,GAClBA,EAAEK,iBACFd,EAASe,EAAAA,WAA0B,CAAEZ,MAAAA,EAAOE,SAAAA,KAL5CD,EAAa,IACbE,EAAgB,GAMnB,EAgBG,WACI,UAACV,EAAD,YACI,SAACC,EAAD,qBACA,kBACImB,KAAK,QACLL,KAAK,QACLC,MAAOT,EACPc,SAAUT,EACVU,UAAQ,QAGhB,UAACtB,EAAD,YACI,SAACC,EAAD,wBACA,kBACImB,KAAK,WACLL,KAAK,WACLC,MAAOP,EACPY,SAAUT,EACVU,UAAQ,QAGhB,SAACpB,EAAD,sBAGX,EC7DD,EATkB,WACd,OACI,4BACI,wCACA,SAACC,EAAD,MAGX,C,sBCTc,SAASoB,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHT,MAAOW,OAAOC,OAAOH,MAG3B,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","views/LoginView.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LogForm = styled.form`\n    width: fit-content;\n    padding: 20px;\n    border: 1px solid black;\n`;\n\nexport const LogFormLabel = styled.label`\n    display: block;\n    margin-bottom: 10px;\n`; \n\nexport const LogFormSpan = styled.span`\n    display: block;\n    margin-bottom: 10px;\n`;\n\nexport const LogFormButton = styled.button`\n    display: block;\n    cursor: pointer;\n\n    &.hover {\n        background-color: aqua;\n    }\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as authOperations from '../../redux/auth/authOperation';\n\n//Style\nimport {\n    LogForm,\n    LogFormLabel,\n    LogFormSpan,\n    LogFormButton\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch();\n    \n    const [email, setEmailUser] = useState('');\n    const [password, setPasswordUser] = useState('');\n    \n    const user = {\n        email: \"email\",\n        password: \"password\"\n    };\n\n    const resetFormInput = () => { \n        setEmailUser('');\n        setPasswordUser('');\n    };\n    const formOnSubmit = (e) => { \n        e.preventDefault();\n        dispatch(authOperations.axiosLogIn({ email, password }));\n        resetFormInput();\n    };\n    const inputOnChange = (e) => { \n        const { name, value } = e.currentTarget;\n            switch (name) {\n                case user.email:\n                    setEmailUser(value);\n                    break;\n                case user.password:\n                    setPasswordUser(value);\n                    break;\n                default:\n                    return;\n        }\n    };\n\n    return (\n        <LogForm onSubmit={formOnSubmit}>\n            <LogFormLabel>\n                <LogFormSpan>Email</LogFormSpan>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={inputOnChange}\n                    required\n                />\n            </LogFormLabel>\n            <LogFormLabel>\n                <LogFormSpan>Password</LogFormSpan>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={inputOnChange}\n                    required\n                />\n            </LogFormLabel>\n            <LogFormButton>Login</LogFormButton>\n        </LogForm>\n    );\n};","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nconst LoginView = () => {\n    return (\n        <div>\n            <h1>Login Form</h1>\n            <LoginForm />\n        </div>\n    );\n};\n\nexport default LoginView;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["LogForm","styled","LogFormLabel","LogFormSpan","LogFormButton","LoginForm","dispatch","useDispatch","useState","email","setEmailUser","password","setPasswordUser","user","inputOnChange","e","currentTarget","name","value","onSubmit","preventDefault","authOperations","type","onChange","required","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}